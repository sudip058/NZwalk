// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NZwalk.API.Data;

#nullable disable

namespace NZwalk.API.Migrations
{
    [DbContext(typeof(NZWalksDbContext))]
    [Migration("20250531141103_seed data for difficuly and region table")]
    partial class seeddatafordifficulyandregiontable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NZwalk.API.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ef63833b-47d7-4ab3-873a-3ad68444973b"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("0a9bd599-69e7-4903-a0e5-3f51117192f1"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("c6c57173-772f-452a-bb7d-20e8d043c03b"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("NZwalk.API.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2caea0ac-28de-4e21-bef5-5df893afbc23"),
                            Code = "NSN",
                            Name = "Nelson",
                            RegionImageUrl = "http://www.gettyimages.com/detail/503939548"
                        },
                        new
                        {
                            Id = new Guid("8b872e8c-1ba1-4fa1-9cbf-04626675fe22"),
                            Code = "AKL",
                            Name = "Aukland",
                            RegionImageUrl = "https://www.alltrails.com/new-zealand/auckland/walking"
                        },
                        new
                        {
                            Id = new Guid("e7020c0f-931b-4fde-99bf-cbdff85c8c8f"),
                            Code = "BOP",
                            Name = "Bay of Plenty",
                            RegionImageUrl = "https://www.eaxmple.com/bayofplenty/images"
                        },
                        new
                        {
                            Id = new Guid("ca769d6b-19b6-45ba-ac37-74730d0eb1d0"),
                            Code = "NTL",
                            Name = "Northland",
                            RegionImageUrl = "https://www.eaxmple.com/Northland/images"
                        },
                        new
                        {
                            Id = new Guid("d183a2fd-7256-4781-ad94-ca54c3e68277"),
                            Code = "STL",
                            Name = "Southland",
                            RegionImageUrl = "https://www.eaxmple.com/Southland/images"
                        },
                        new
                        {
                            Id = new Guid("a5300ed1-2603-4eb6-b810-c702f4a9c840"),
                            Code = "WGN",
                            Name = "Wellington",
                            RegionImageUrl = "https://www.eaxmple.com/Wellington/images"
                        });
                });

            modelBuilder.Entity("NZwalk.API.Models.Domain.Walks", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("NZwalk.API.Models.Domain.Walks", b =>
                {
                    b.HasOne("NZwalk.API.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NZwalk.API.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
